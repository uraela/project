# Set up and run this Streamlit App
import streamlit as st
#from bs4 import BeautifulSoup
from logics.webscrape import scraper
from logics.webscrape import get_course_info
from logics.webscrape import reply
import pandas as pd
import numpy as np
 
from helper_functions.utility import check_password  

# Check if the password is correct.  
if not check_password():  
    st.stop()

#from logics.customer_query_handler import process_user_message
#from helper_functions import llm # <--- This is the helper function that we have created üÜï
#import json
#from helper_functions import llm

st.set_page_config(
    layout="centered",
    page_title="Career Advisor"
)
# endregion <--------- Streamlit App Configuration --------->

st.title("Career Advisor üê∑")
st.write ("Ask Ms Piggy for advice on your mid-career crisis. She will provide some information about the field\
          that you would like to transit into and provide some courses you can spend your skillsfuture credits on!")

expander = st.expander("IMPORTANT NOTICE")
expander.write('''
             This web application is a prototype developed for educational purposes only.\
             The information provided here is NOT intended for real-world usage and should not be relied upon\
             for making any decisions, especially those related to financial, legal, or healthcare matters.\n\
             Furthermore, please be aware that the LLM may generate inaccurate or incorrect information.\
            You assume full responsibility for how you use any generated output.\n\
            Always consult with qualified professionals for accurate and personalized advice.
''')

form = st.form(key="form")
form.subheader("Ask me!")

#st.sidebar.success("Select a demo above.")

#links = 'https://www.myskillsfuture.gov.sg/content/portal/en/training-exchange/course-directory/course-detail.html?courseReferenceNumber=TGS-2020500290'#, 'https://www.myskillsfuture.gov.sg/content/portal/en/training-exchange/course-directory/course-detail.html?courseReferenceNumber=TGS-2018502754', 'https://www.myskillsfuture.gov.sg/content/portal/en/training-exchange/course-directory/course-detail.html?courseReferenceNumber=TGS-2024043624']
#get_course_info(links)
user_prompt = form.text_area("Enter your prompt here, continue \"I want a job in ..\" e.g. design", height=70)

if form.form_submit_button("Submit"):
    st.toast(f"User Input Submitted - {user_prompt}")
    response,coord = reply(user_prompt)
    #response = process_user_message(user_prompt) # <--- This calls the helper function that we have created üÜï
    st.write(response) #<--- This displays the response generated by the LLM onto the frontend üÜï
    st.write("Prices are before applying skillsfuture credits!") 
    print(f"Coordinate is {coord}")
    #print(f"leng is {len(coord)}")
    #coord = "1.3521, 103.8198, 1.2903, 103.8519, 1.3050, 103.8318" # for testing
    lati = []
    longi = []
    outc = []
    outc = coord.split(",")
    #print(f"length is {len(outc)}")
    # for i in range(len(outc)): #->dont work cos outc is a string not array
    #     lati= np.append(lati,outc[i][0]) 
    #     longi = np.append(longi,outc[i][1])
    #     print (outc[i][0])
    lati= [float(outc[i]) for i in range(len(outc)) if i % 2 == 0]
    longi = [float(outc[i]) for i in range(len(outc)) if i % 2 != 0]

    df = pd.DataFrame(
        {'col1': lati,
        'col2': longi,
        }
    )
    print(df)
    st.map(df, latitude="col1", longitude="col2")



   